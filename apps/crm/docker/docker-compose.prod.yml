services:

  # Server: NodeJS Express
  node-api:
    container_name: techexpo-node-api-prod
    build:
      dockerfile: ./Dockerfile
    image: techexpo-nodejs-express-api
    env_file:
      - ../server/.env.prod
    networks:
      - crm-backend
    security_opt:
      - no-new-privileges

  # Client: Nginx-React
  react-app:
    container_name: techexpo-react-app-prod
    build:
      dockerfile: ./Dockerfile
    image: techexpo-react-app
    env_file:
      - ../client/.env.prod
    depends_on:
      - node-api
    networks:
      - techexpo
    security_opt:
      - no-new-privileges

  # NGINX
  nginx:
    container_name: techexpo-nginx-prod
    restart: on-failure
    build:
      context: ../nginx
      dockerfile: Dockerfile
    depends_on:
      - node-api
      - react-app
    ports:
      - 8080:80
    networks:
      - techexpo
    security_opt:
      - no-new-privileges

  # DB: MongoDB
  mongodb:
    container_name: techexpo-mongodb
    image: mongo:6.0.6-custom
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_INITDB_ROOT_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT # // NOTE:  Is this required; don't expose to public
    volumes:
      - mongodb-prod-data:/data/db
      - ../server/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - crm-backend
    security_opt:
      - no-new-privileges
    command: mongod --auth
  # // DANGER:  Password in .conf file - need to explore options for transferring from secret/env.
  # redis:

volumes:
  mongodb-prod-data:
    name: mongodb-prod-data
    external: true

networks:
  crm-backend:
    driver: bridge
