map_hash_max_size 8000;
map_hash_bucket_size 8000;

map $uri $new_uri {
  include /etc/nginx/redirects.map;
  default $uri;
}

server {
  listen ${NGINX_PROXY_2_DOCKER_PORT_HTTP};

  location = /health {
    default_type application/json;
    return 200 '{"status":"ok"}';
  }
}

server {
  include conf.d/security-headers.conf;
  listen ${NGINX_PROXY_2_DOCKER_PORT_TLS} ssl;

  ssl_certificate /etc/nginx/certs/nginxreact.crt;
  ssl_certificate_key /etc/nginx/certs/nginxreact.key;
  ssl_client_certificate /etc/nginx/certs/nginxreact-ca.crt;
  ssl_verify_client on;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'HIGH:!aNULL:!MD5';
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  gzip on;
  gzip_static on;
  gzip_comp_level 6;
  gzip_disable "msie6";
  gzip_min_length 1024;
  gzip_proxied no-cache no-store private expired auth;
  gzip_types application/javascript application/json application/xml image/svg+xml text/css text/plain text/xml;
  gzip_vary on;

  brotli on;
  brotli_static on;
  brotli_comp_level 6;
  brotli_types application/atom+xml application/javascript application/json application/octet-stream application/rss+xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/x-javascript application/x-web-app-manifest+json application/xhtml+xml application/xml font/eot font/opentype font/otf font/truetype font/woff font/woff2 image/bmp; image/svg+xml image/vnd.microsoft.icon image/x-icon image/x-win-bitmap text/css text/javascript text/plain text/x-component text/xml;

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
    gzip_static on;
    # add_header X-my-debug "Location Block /";
  }

  location = /robots.txt {
    root /usr/share/nginx/html;
    index robots.txt;
    log_not_found off;
  }

  location ^~ /img {
    add_header X-my-debug "Location Block ^~ /img";
    return 301 $new_uri;
    access_log off;
  }

  location ~* \.(?:cur|webp|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg)$ {
    root /usr/share/nginx/html;
    try_files $uri =404;
    access_log off;
    # add_header X-my-debug "Location Block ~* \.(?:cur|webp|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|woff2|svg)$";
    add_header Content-Security-Policy "default-src 'self';" always;
    add_header X-Content-Type-Options "nosniff";
    add_header Cache-Control public;
    expires max;

    tcp_nodelay off;
  }

  location ~* \.(?:css|js)$ {
    root /usr/share/nginx/html;
    access_log off;
    # add_header X-my-debug "Location Block ~* \.(?:css|js)$";
    add_header X-Content-Type-Options "nosniff";
    add_header Cache-Control public;
    expires max;

    tcp_nodelay off;
  }
}
