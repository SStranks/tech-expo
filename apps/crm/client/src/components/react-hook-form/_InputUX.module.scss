@use '#Sass/abstracts/animations' as a;
@use '#Sass/components/form' as form;

$padding: 16px;

.inputUX {
  @include form.input-container;
  position: relative;
  display: flex;
  min-height: form.$input-height;
  background-color: inherit;
  border: form.$input-border;
  border-radius: form.$input-border-radius;
  transition: a.$input-focus;

  &__label {
    position: absolute;
    top: calc(-2px + $padding);
    left: $padding;
    font-size: 16px;
    background-color: inherit;
    color: form.$input-placeholder;
    transition: all 0.2s ease-in-out;

    display: flex;
    align-items: center;
  }

  &__required {
    border-color: form.$input-color-danger;

    &::before {
      content: 'Required';
      position: absolute;
      top: 0;
      left: 50%;
      max-width: fit-content;
      width: 100px;
      padding-inline: 4px;
      font-size: 14px;
      color: form.$input-color-danger;
      background-color: inherit;
      transform: translate(-50%, calc(-50% - 2px));
      transition:
        width 0.4s,
        padding-inline 0.4s;
      overflow: hidden;
    }
  }

  &:has(:focus, :focus-within, [data-open], [data-focused], [data-focus-visible]) {
    @include form.input-focus-within;

    &::before {
      padding-inline: 0;
      width: 0;
    }

    & .inputUX__label {
      padding-inline: 4px;
      color: form.$input-color-active;
      font-size: 12px;
      transform: translate(calc($padding / -2), calc(-1 * $padding) - 7px);
      z-index: 1; // Clip out success pulse effect
    }
  }
}

.success {
  position: relative;
  @include form.input-valid;

  &::before {
    display: none;
  }

  &::after {
    @include form.input-validated;
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
  }

  &:has(:focus, :focus-within, [data-open], [data-focused], [data-focus-visible], [data-required]) {
    @include form.input-valid;
  }

  &:is(:focus, :not(:placeholder-shown)) .inputUX__label {
    padding-inline: 4px;
    font-size: 12px;
    color: form.$input-color-success;
    transform: translate(calc($padding / -2), calc(-1 * $padding) - 7px);
  }
}
