@use '#Sass/components/form' as form;

$padding: 16px;
$calendar-background-color: var(--thm-background-subtle);

.icon {
  color: var(--thm-icon-default);
}

.button {
  outline: none;

  &__svg {
    color: var(--thm-icon-default);
    transform-origin: center;
    transition: transform 0.4s;
  }
}

.dateInput {
  display: flex;
  align-items: center;
  width: 100%;
  color: var(--thm-text-default);
  transition: color 0.2s ease-in-out;
}

.datePicker {
  display: flex;
  padding-inline: $padding;
  width: 100%;

  &:is([data-open]) {
    & .button__svg {
      transform: scaleY(-1);
    }
  }

  &:is(:not([data-focus-within])) {
    & .dateInput {
      opacity: 0;
    }
  }
}

// .label {}

.group {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

.dateSegment {
  outline: none;

  &:focus {
    background-color: var(--thm-icon-info);
  }
}

// .text {}

.popover {
  color: var(--thm-text-default);
  background-color: $calendar-background-color;
  border: 1px solid var(--thm-border-default);
  border-radius: 6px;
}

// .dialog {}

.calendar {
  display: flex;
  flex-direction: column;
  padding: 10px 20px;

  &__header {
    display: flex;
    justify-content: center;
    margin: 15px 0;
  }

  &__heading {
    margin-inline: 20px;
  }

  // &__buttonPrev {}

  // &__buttonNext {}

  // &__buttonYear {}

  &__buttonToday {
    color: var(--thm-text-default);
  }
}

.calendarGrid {
  border-spacing: 8px;

  &__header {
    position: relative;
    box-shadow: 0 8px 0 0 var(--thm-border-secondary);

    // Table element border emulation with box-shadow; cancel out some thickness
    &::before {
      content: '';
      position: absolute;
      bottom: 0 - 6px;
      width: 100%;
      height: 7px;
      background-color: $calendar-background-color;
    }

    &__cell {
      font-size: 14px;
    }
  }

  // &__body {}

  &__cell {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10px;
    max-width: 35px;
    max-height: 35px;
    border-radius: 4px;

    &[data-hovered],
    &[data-focused] {
      background-color: var(--thm-button-primary-hover);
      outline: none;
    }

    &[data-outside-month] {
      opacity: 0.2;
    }

    &__today {
      border: 1px solid var(--thm-button-primary-disabled-border);
    }
  }
}

.success {
  position: relative;
  @include form.input-valid;

  &::before {
    display: none;
  }

  &::after {
    @include form.input-validated;
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    pointer-events: none;
  }

  &:has(.select:is([data-open], [data-focused], [data-focus-visible], [data-required])) {
    @include form.input-valid;
  }

  & .select {
    &:is(:focus, :not(:placeholder-shown)) .label {
      padding-inline: 4px;
      font-size: 12px;
      color: form.$input-color-success;
      transform: translate(calc($padding / -2), calc(-1 * $padding) - 7px);
    }
  }
}
