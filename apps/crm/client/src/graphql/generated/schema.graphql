type Query {
  """Retrieves a single audit entry by its unique ID."""
  audit(id: UUID!): Audit
  """Retrieves a paginated and optionally filtered list of audit entries."""
  audits(userName: String, action: AuditAction, startDate: DateTime, endDate: DateTime, page: Int = 1, pageSize: Int = 20): AuditList
  """
  Fetches the initial calendar data for a company, including all categories and events
  within a given time range. Intended for initial page load.
  """
  calendarInitialData(companyId: UUID!, startDate: DateTime!, endDate: DateTime!): CalendarInitialData
  """
  Fetches events for a company's calendar within the specified date range.
  Useful for updating events when switching views (e.g., day/week/month).
  """
  calendarEventsByCompany(companyId: UUID!, startDate: DateTime!, endDate: DateTime!): [CalendarEvent!]
  """
  Fetches a company by its UUID.
  Throws an error if the company does not exist.
  """
  company(id: UUID!): Company
  """
  Returns a paginated list of all companies.
  Supports optional filtering by country and industry.
  """
  companies(search: String, salesOwnerId: UUID, contactIds: [UUID!], page: Int = 1, pageSize: Int = 12): [Company]
  """
  Fetches a single contact by its UUID.
  Returns `null` if the contact is not found.
  """
  contact(id: UUID!): Contact
  """Returns a list of all contacts in the system."""
  contacts: [Contact]
  """
  Returns high-level summary data for the dashboard view, scoped to a specific company.
  """
  dashboardSummary(companyId: UUID!): DashboardSummary!
  """
  Fetches the initial data for rendering a kanban board belonging to a specific company.
  Includes stages, task ordering, and tasks.
  """
  kanbanInitialData(companyId: UUID!): KanbanInitialData
  """
  Retrieves the initial data needed to load the pipeline view for a given company,
  including the pipeline, all stages, and ordered deals.
  """
  pipelineInitialData(companyId: UUID!): PipelineInitialData
  """Fetches a specific quote by UUID."""
  quote(id: UUID!): Quote
  """Returns a paginated list of quotes with optional filters and search."""
  quotes(title: String, companyId: UUID, stage: QuoteStage, preparedBy: UUID, page: Int = 1, pageSize: Int = 12): QuoteList
  """Retrieves a single user profile by their unique ID."""
  user(id: UUID!): UserProfile
  """Retrieves a list of user profiles by their unique IDs."""
  users(ids: [UUID!]): [UserProfile]
}

"""
Represents an audit log entry recording a change made to an entity in the system.
"""
type Audit {
  """A unique identifier for the audit record."""
  id: UUID!
  """The unique identifier of the entity that was changed."""
  entityId: UUID!
  """
  The type of action that was performed on the entity (e.g., INSERT, UPDATE, DELETE).
  """
  entityAction: AuditAction!
  """The date and time when the change occurred."""
  changedAt: DateTime!
  """The user who performed the change."""
  changedBy: UserProfile!
  """The original values of the entity before the change (if applicable)."""
  originalValues: JSON
  """The new values of the entity after the change (if applicable)."""
  newValues: JSON
}

"""Contains a list of audits and pagination metadata."""
type AuditList {
  """
  Synthetic unique identifier for the paginated list (to satisfy ESLint rules).
  Can be a hash or string derived from query parameters.
  """
  id: ID!
  """The list of audits for the current page."""
  items: [Audit!]!
  """The total number of quotes matching the filter."""
  totalCount: Int!
}

"""
Enumerates the possible actions that can be performed on an entity for auditing purposes.
"""
enum AuditAction {
  INSERT
  UPDATE
  DELETE
}

"""
Represents a calendar associated with a company.
A company has a single calendar, which contains multiple categories and events.
"""
type Calendar {
  """Unique identifier for the calendar."""
  id: UUID!
  """The ID of the company that owns this calendar."""
  companyId: UUID!
  """A list of all event categories defined in the calendar."""
  categories: [CalendarCategory!]!
}

"""
Returned by the initial data query to provide all necessary information
to render the calendar view on first load.
"""
type CalendarInitialData {
  """
  A synthetic ID representing this response (e.g., `${companyId}:${startDate}:${endDate}`).
  """
  id: ID!
  """The calendar object associated with the given company."""
  calendar: Calendar!
  """All categories associated with the calendar."""
  categories: [CalendarCategory!]!
  """All events that fall within the specified start and end dates."""
  events: [CalendarEvent!]!
}

"""Represents a category under which events can be grouped."""
type CalendarCategory {
  """Unique identifier for the category."""
  id: UUID!
  """The title of the category."""
  title: String!
}

"""Represents a single event in the calendar."""
type CalendarEvent {
  """Unique identifier for the event."""
  id: UUID!
  """The title of the event."""
  title: String!
  """A longer description or notes about the event."""
  description: String
  """
  A hex color string (e.g. "#FF5733") used to visually represent this event.
  """
  color: HexColorCode
  """Start time of the event in ISO 8601 format."""
  startTime: DateTime!
  """End time of the event in ISO 8601 format."""
  endTime: DateTime!
  """The category this event belongs to."""
  category: CalendarCategory
  """A list of users participating in the event."""
  participants: [UserProfile!]!
}

"""
Represents a company registered in the system, including location and industry metadata.
"""
type Company {
  """Unique identifier for the company (UUID format)."""
  id: UUID!
  """Official legal or trading name of the company."""
  name: String!
  """General size classification of the company.."""
  size: CompanySize!
  """Reported total annual revenue of the company, in base currency units."""
  totalRevenue: Float!
  """Industry sector the company operates in (e.g., Fintech, Healthcare)."""
  industry: String!
  """Business type or legal structure."""
  businessType: BusinessType!
  """Country where the company is headquartered."""
  country: Country!
  """Company’s primary website URL, if available."""
  website: String
  """Paginated list of contacts associated with this company."""
  contacts(limit: Int = 5, offset: Int = 0): CompanyPaginatedContacts!
  """Paginated list of deals in the sales pipeline for this company."""
  deals(limit: Int = 5, offset: Int = 0): CompanyPaginatedDeals!
  """Paginated list of quotes issued to this company."""
  quotes(limit: Int = 5, offset: Int = 0): CompanyPaginatedQuotes!
  """
  A list of notes associated with this contact, typically used to record interactions, updates, or important information.
  """
  notes: [CompanyNote!]!
}

"""Represents a paginated list of contacts associated with a company."""
type CompanyPaginatedContacts {
  """
  A synthetic unique identifier for the paginated contact list.
  Can be derived from query parameters (e.g., page number, filters).
  """
  id: ID!
  """The list of contacts returned for the current page."""
  items: [Contact!]!
  """
  The total number of contacts available for the company, regardless of pagination.
  """
  totalCount: Int!
}

"""Represents a paginated list of deals associated with a company."""
type CompanyPaginatedDeals {
  """
  A synthetic unique identifier for the paginated contact list.
  Can be derived from query parameters (e.g., page number, filters).
  """
  id: ID!
  """The list of deals returned for the current page."""
  items: [PipelineDeal!]!
  """
  The total number of deals available for the company, regardless of pagination.
  """
  totalCount: Int!
}

"""Represents a paginated list of quotes associated with a company."""
type CompanyPaginatedQuotes {
  """
  A synthetic unique identifier for the paginated contact list.
  Can be derived from query parameters (e.g., page number, filters).
  """
  id: ID!
  """The list of quotes returned for the current page."""
  items: [Quote!]!
  """
  The total number of quotes available for the company, regardless of pagination.
  """
  totalCount: Int!
}

"""
Represents a note associated with a specific company, used for tracking interactions or important details.
"""
type CompanyNote {
  """Unique identifier for the company note."""
  id: UUID!
  """The content or body of the note."""
  note: String!
  """The company this note is associated with."""
  company: Company!
  """The timestamp of when the note was created."""
  createdAt: DateTime!
  """The user who created the note."""
  createdBy: UserProfile!
}

"""Company size classification."""
enum CompanySize {
  MICRO
  SMALL
  MEDIUM
  LARGE
}

"""Business model type."""
enum BusinessType {
  B2B
  B2C
}

"""
Represents a person associated with a company, typically a lead or client contact.
"""
type Contact {
  """Unique identifier for the contact (UUID format)."""
  id: UUID!
  """Contact’s given name."""
  firstName: String!
  """Contact’s family or surname."""
  lastName: String!
  """Email address of the contact."""
  email: EmailAddress!
  """Phone number of the contact."""
  phone: String!
  """The company the contact is associated with."""
  company: Company!
  """Job title or role of the contact at the company."""
  jobTitle: String!
  """Current engagement stage of the contact in your workflow."""
  stage: ContactStage!
  """IANA timezone string representing the contact's local timezone."""
  timezone: TimeZone
  """
  A list of notes associated with this contact, typically used to record interactions, updates, or important information.
  """
  notes: [ContactNote!]!
}

"""
Represents a note associated with a specific contact, used for tracking interactions or important details.
"""
type ContactNote {
  """Unique identifier for the contact note."""
  id: UUID!
  """The content or body of the note."""
  note: String!
  """The contact this note is associated with."""
  contact: Contact!
  """The timestamp of when the note was created."""
  createdAt: DateTime!
  """The user who created the note."""
  createdBy: UserProfile!
}

"""
Describes the current status of a contact in the sales or client lifecycle.
"""
enum ContactStage {
  NEW
  CONTACTED
  INTERESTED
  UNQUALIFIED
  QUALIFIED
  NEGOTIATION
  LOST
  WON
  CHURNED
}

"""
Represents a country with standardized codes and names used for identification and classification.
"""
type Country {
  """A unique identifier for the country."""
  id: UUID!
  """
  The numeric ISO 3166-1 code for the country (e.g., 840 for the United States).
  """
  numCode: Int!
  """The two-letter ISO 3166-1 alpha-2 code for the country (e.g., "US")."""
  alpha2Code: String!
  """
  The three-letter ISO 3166-1 alpha-3 code for the country (e.g., "USA").
  """
  alpha3Code: String!
  """The commonly used short name of the country (e.g., "United States")."""
  shortName: String!
  """
  The term used to describe a person from the country (e.g., "American").
  """
  nationality: String!
}

"""
Encapsulates summarized metrics and location data used for the dashboard.
"""
type DashboardSummary {
  """Total number of companies associated with the given company ID."""
  totalCompanies: Int!
  """
  Total number of contacts linked to companies under the given company ID.
  """
  totalContacts: Int!
  """Total number of active deals in the pipeline for the company."""
  totalDeals: Int!
  """Total number of quotes created and associated with the company."""
  totalQuotes: Int!
  """
  List of company locations used for visualizing company distribution on a map.
  """
  companyLocations: [CompanyLocation!]!
}

"""Represents geolocation data for a company used in map displays."""
type CompanyLocation {
  """Unique identifier of the company."""
  id: UUID!
  """Name of the company."""
  name: String!
  """Latitude coordinate of the company's primary location."""
  latitude: Float!
  """Longitude coordinate of the company's primary location."""
  longitude: Float!
}

"""Represents a Kanban board tied to a specific company."""
type Kanban {
  """Unique identifier for the kanban board."""
  id: UUID!
  """ID of the company this kanban board belongs to."""
  companyId: UUID!
  """All tasks associated with this kanban board."""
  tasks: [KanbanTask!]!
}

"""
Initial data returned when loading a kanban board, including structure and task state.
"""
type KanbanInitialData {
  """Unique identifier for this payload."""
  id: ID!
  """The kanban board data."""
  kanban: Kanban!
  """Defines the order of tasks within each stage of the kanban board."""
  tasksOrder: [KanbanTaskOrder]
  """The set of stages (columns) in the kanban board."""
  stages: [KanbanStage!]!
}

"""A task within the kanban board."""
type KanbanTask {
  """Unique identifier for the task."""
  id: UUID!
  """
  Short, unique identifier (6 characters) for external referencing or display. Generated via nanoid.
  """
  serial: String!
  """The title or summary of the task."""
  title: String!
  """Whether the task has been marked as completed."""
  completed: Boolean!
  """The stage (column) this task currently belongs to."""
  stage: KanbanStage!
  """Optional description providing more context about the task."""
  description: String
  """Optional due date for the task."""
  dueDate: DateTime
  """The user assigned to this task, if any."""
  assignedUser: UserProfile
  """Comments associated with this task."""
  comments: [KanbanTaskComment!]!
  """
  Checklist items tied to this task, representing subtasks or actionable items.
  """
  checklistItems: [KanbanTaskChecklistItem!]
}

"""Defines the order of task serials within a given kanban stage."""
type KanbanTaskOrder {
  """Unique identifier for the task order entry."""
  id: UUID!
  """The stage this task order is associated with."""
  stage: KanbanStage!
  """Ordered list of task serials (not UUIDs) in this stage."""
  taskOrder: [String!]!
}

"""A checklist item within a kanban task."""
type KanbanTaskChecklistItem {
  """Unique identifier for the checklist item."""
  id: UUID!
  """The task this checklist item belongs to."""
  task: KanbanTask!
  """Title or label for the checklist item."""
  title: String!
  """Whether this checklist item has been completed."""
  completed: Boolean!
}

"""A comment left on a kanban task by a user."""
type KanbanTaskComment {
  """Unique identifier for the comment."""
  id: UUID!
  """The task this comment is associated with."""
  task: KanbanTask!
  """Timestamp when the comment was created."""
  createdAt: DateTime!
  """The user who wrote the comment."""
  createdBy: UserProfile!
  """Content of the comment."""
  comment: String!
}

"""
Represents a stage (or column) in a kanban board, such as "To Do", "In Progress", or "Done".
"""
type KanbanStage {
  """Unique identifier for the stage."""
  id: UUID!
  """Title of the stage."""
  title: String!
}

"""
Represents a sales or deal pipeline associated with a specific company.
"""
type Pipeline {
  """Unique identifier of the pipeline."""
  id: UUID!
  """Identifier of the company that owns this pipeline."""
  companyId: UUID!
  """All deals currently associated with this pipeline."""
  deals: [PipelineDeal!]!
}

"""
Initial data payload returned when loading the pipeline view.
Includes pipeline details, stages, and ordered deals.
"""
type PipelineInitialData {
  """Unique identifier of the pipeline initial data payload."""
  id: ID!
  """The pipeline associated with the given company."""
  pipeline: Pipeline!
  """Defines the order of deals within each stage of the pipeline."""
  dealsOrder: [PipelineDealOrder]
  """List of all stages in the pipeline."""
  stages: [PipelineStage!]!
}

"""
Represents a deal within the pipeline, such as a potential sale or client opportunity.
"""
type PipelineDeal {
  """Unique identifier of the deal."""
  id: UUID!
  """
  A short, unique serial identifier (e.g., 6-character string) used to refer to the deal.
  """
  serial: String!
  """Title or name of the deal."""
  title: String!
  """The company associated with the deal."""
  company: Company!
  """The current stage the deal is in within the pipeline."""
  stage: PipelineStage!
  """The monetary value associated with the deal."""
  value: Float!
  """The user assigned as the primary owner or representative of the deal."""
  owner: UserProfile!
  """The contact person associated with the deal (e.g., client or lead)."""
  contact: Contact!
  """Timestamp indicating when the deal was created."""
  createdAt: DateTime!
}

"""
Represents the order of deals in a given pipeline stage.
Used to preserve UI ordering.
"""
type PipelineDealOrder {
  """Unique identifier of the deal order entry."""
  id: UUID!
  """The stage associated with this deal order configuration."""
  stage: PipelineStage!
  """An ordered list of deal serial identifiers for this stage."""
  dealOrder: [String!]!
}

"""
Represents a single stage within the pipeline (e.g., Prospecting, Negotiation, Closed).
"""
type PipelineStage {
  """Unique identifier of the stage."""
  id: UUID!
  """Descriptive title of the stage."""
  title: String!
}

"""
Represents a formal quote issued to a client for services or products,
including financial details, associated company and contact, and current stage.
"""
type Quote {
  """Unique identifier for the quote (UUID format)."""
  id: UUID!
  """The title or reference name of the quote."""
  title: String!
  """The company this quote is issued on behalf of."""
  company: Company!
  """
  The total cost of the quote, including services and any applied discounts or taxes.
  """
  total: Float!
  """The amount of sales tax included in the quote total."""
  salesTax: Float!
  """The current status of the quote (e.g., DRAFT, SENT, ACCEPTED)."""
  stage: QuoteStage!
  """The contact person the quote is prepared for."""
  preparedFor: Contact!
  """The user who created and issued the quote."""
  preparedBy: UserProfile!
  """The date when the quote was formally issued."""
  issuedAt: DateTime
  """
  The due date by which the quote is expected to be accepted or responded to.
  """
  dueAt: DateTime
  """The date the quote record was created in the system."""
  createdAt: DateTime!
  """
  A list of services included in this quote, along with pricing and quantities.
  """
  services: [QuoteService!]!
  """
  A note associated with the quote, typically containing internal comments or additional instructions.
  """
  note: QuoteNote!
}

"""Contains a list of quotes and pagination metadata."""
type QuoteList {
  """
  Synthetic unique identifier for the paginated list (to satisfy ESLint rules).
  Can be a hash or string derived from query parameters.
  """
  id: ID!
  """The list of quotes for the current page."""
  items: [QuoteSummary!]!
  """The total number of quotes matching the filter."""
  totalCount: Int!
}

"""
A lightweight version of a quote used in summary views or lists.
Excludes detailed fields like services or notes for performance optimization.
"""
type QuoteSummary {
  """Unique identifier for the quote (UUID format)."""
  id: UUID!
  """Title or reference name of the quote."""
  title: String!
  """The company the quote is associated with."""
  company: Company!
  """The total amount quoted, including any taxes or discounts."""
  total: Float!
  """The current stage of the quote (e.g., DRAFT, SENT, ACCEPTED)."""
  stage: QuoteStage!
  """The contact for whom the quote was prepared."""
  preparedFor: Contact!
  """The user who prepared and issued the quote."""
  preparedBy: UserProfile!
  """The creation timestamp of the quote."""
  createdAt: DateTime!
}

"""
A note attached to a quote, typically used for internal remarks or contextual details.
"""
type QuoteNote {
  """Unique identifier for the quote note (UUID format)."""
  id: UUID!
  """The textual content of the note."""
  note: String!
}

"""
Represents an individual service or line item included in a quote.
Each service contributes to the total value of the quote.
"""
type QuoteService {
  """Unique identifier for the service line item (UUID format)."""
  id: UUID!
  """Descriptive title of the service or product being quoted."""
  title: String!
  """Unit price of the service."""
  price: Float!
  """Quantity of the service units being quoted."""
  quantity: Float!
  """Discount applied to the service, if any."""
  discount: Float!
  """
  Total amount for this line item, factoring in price, quantity, and discount.
  """
  total: Float!
}

"""Enumerates the lifecycle stages of a quote."""
enum QuoteStage {
  DRAFT
  SENT
  ACCEPTED
}

"""Imported from 'graphql-scalars'"""
scalar DateTime

"""UImported from 'graphql-scalars'"""
scalar EmailAddress

"""Imported from 'graphql-scalars'"""
scalar HexColorCode

"""Imported from 'graphql-scalars'"""
scalar JSON

"""Imported from 'graphql-scalars'"""
scalar UUID

"""
Represents a time zone associated with a specific country, including the GMT offset and ISO country code.
"""
type TimeZone {
  """A unique identifier for the time zone entry."""
  id: UUID!
  """
  The two-letter ISO 3166-1 alpha-2 code for the country this time zone is associated with (e.g., "US").
  """
  alpha2Code: String!
  """
  The time zone's offset from GMT/UTC, typically formatted as "+HH:MM" or "-HH:MM" (e.g., "-05:00").
  """
  gmtOffset: String!
  """The country associated with this time zone."""
  country: Country!
}

"""
Represents a user's profile within the system, including personal details, contact information, and associated organization data.
"""
type UserProfile {
  """A unique identifier for the user."""
  id: UUID!
  """The user's first name."""
  firstName: String!
  """The user's last name."""
  lastName: String!
  """The user's email address."""
  email: EmailAddress!
  """The user's mobile phone number, if available."""
  mobile: String
  """The user's landline or office telephone number, if available."""
  telephone: String
  """The user's preferred time zone."""
  timezone: TimeZone!
  """The country the user is located in or associated with."""
  country: Country!
  """The company the user belongs to."""
  company: Company!
  """The user's role within the company."""
  companyRole: CompanyRole!
  """A URL or file path to the user's profile image, if available."""
  image: String
}

"""Defines the various roles a user can have within a company."""
enum CompanyRole {
  """An administrative user with full access and permissions."""
  ADMIN
  """A manager responsible for overseeing sales teams and activities."""
  SALES_MANAGER
  """
  A user responsible for direct sales operations and client interactions.
  """
  SALES_PERSON
  """An intern supporting the sales team."""
  SALES_INTERN
}

schema {
  query: Query
}