@use '#Sass/abstracts/animations' as a;
@use '#Sass/abstracts/mixins' as mx;
@use '#Sass/abstracts/variables' as v;

// Utilized in the React component as dynamic variable; for placement of portal relative to window
:root {
  --user-settings-menu-offset-x: ;
}

.userIcon {
  @include mx.header-button;

  &__svg {
    @include mx.header-button-svg;
  }
}

@mixin button {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  column-gap: 14px;
  padding: 6px 15px;
  border-radius: 4px;
}

.portalContent {
  position: absolute;
  top: calc(v.$header-dim-vertical + v.$header-modals-offset-y);
  left: var(--user-settings-menu-offset-x);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 200px;
  height: fit-content;
  background-color: var(--thm-background-default);
  border: 1px solid var(--thm-border-secondary);
  border-radius: 6px;
  transform: translateX(-100%);

  &__header {
    width: 100%;
    padding: 12px 16px;
    color: var(--thm-text-default);
    border-bottom: 1px solid var(--thm-border-secondary);
    text-align: center;
  }

  &__buttons {
    display: flex;
    flex-direction: column;
    row-gap: 4px;
    width: 100%;
    padding: 4px;
    background-color: var(--thm-background-subtle);
  }
}

.userSettingsBtn {
  @include button;
  font-size: 15px;
  color: var(--thm-text-default);

  &:hover {
    background-color: var(--thm-button-primary-hover);
  }

  &__svg {
    color: var(--thm-icon-default);
  }
}

.logoutBtn {
  @include button;
  font-size: 15px;
  color: var(--thm-text-danger);

  &:hover {
    background-color: hsl(from var(--thm-button-primary-destructive-background) h s l / 20%);
  }

  &__svg {
    color: var(--thm-icon-danger);
  }
}

/* -------------------------------- */
/*   CSS-Transition-Group           */
/* -------------------------------- */

@include a.ctg-modal-default;
